// <auto-generated />
using System;
using ECommerce.Data.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Data.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250117174305_mig-1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Entity.Concrete.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "115c7796-cfac-44de-91b5-916eaae125b5",
                            Description = "Administrator role",
                            Name = "AdminUser",
                            NormalizedName = "ADMINUSER"
                        },
                        new
                        {
                            Id = "811f466c-9d06-43f8-a054-24aedbb4161b",
                            Description = "Regular user role",
                            Name = "NormalUser",
                            NormalizedName = "NORMALUSER"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "0db2705a-d728-4bbf-b121-45e70cacfe33",
                            DateOfBirth = new DateTime(2025, 1, 17, 20, 43, 4, 25, DateTimeKind.Local).AddTicks(2806),
                            Email = "adminuser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINUSER@GMAIL.COM",
                            NormalizedUserName = "ADMINUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEF6w6z4QdQJpDup5QsUbJYwkOuu8h0ttzTStidU4iEmNJjwPV2G3JkiUEln4fwfe5Q==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3c055a81-9131-48c9-baef-53466592d1e6",
                            TwoFactorEnabled = false,
                            UserName = "adminuser@gmail.com"
                        },
                        new
                        {
                            Id = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "4bccae26-e09b-467d-a9a3-1b04d4363468",
                            DateOfBirth = new DateTime(2025, 1, 17, 20, 43, 4, 81, DateTimeKind.Local).AddTicks(516),
                            Email = "normaluser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Normal",
                            Gender = 1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORMALUSER@GMAIL.COM",
                            NormalizedUserName = "NORMALUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOMa4meAPNZ9JNRxkUoKwu3nz73JleGHR2HdShdlldGWvSn32rsbJ0AihJrIlxGylA==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8281a7f2-fee5-4cf9-b107-66e9479bf66a",
                            TwoFactorEnabled = false,
                            UserName = "normaluser@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 138, DateTimeKind.Utc).AddTicks(5767),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 138, DateTimeKind.Utc).AddTicks(5774),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2097),
                            Description = "Elektronik ürünler",
                            ImageUrl = "/images/category-elektronik.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2101),
                            Description = "Giyim ürünleri",
                            ImageUrl = "/images/category-giyim.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2102),
                            Description = "Kozmetik ürünler",
                            ImageUrl = "/images/category-kozmetik.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kozmetik"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2103),
                            Description = "Kitaplar",
                            ImageUrl = "/images/category-kitap.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kitap"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2104),
                            Description = "Hediyelik eşyalar",
                            ImageUrl = "/images/category-hediyelik-esya.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hediyelik Eşya"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2105),
                            Description = "Spor ürünleri",
                            ImageUrl = "/images/category-spor.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2106),
                            Description = "Ev dekorasyon ürünleri",
                            ImageUrl = "/images/category-ev-dekorasyonu.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ev Dekorasyonu"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2107),
                            Description = "Müzik aletleri",
                            ImageUrl = "/images/category-muzik.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Müzik"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2108),
                            Description = "Oyun ürünleri",
                            ImageUrl = "/images/category-oyun.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oyun"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2109),
                            Description = "Gıda ürünleri",
                            ImageUrl = "/images/category-yiyecek.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yiyecek"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 102,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 103,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 104,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 105,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 106,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 107,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 108,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 109,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 110,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 111,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 112,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 113,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 4
                        },
                        new
                        {
                            Id = 114,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 115,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 4
                        },
                        new
                        {
                            Id = 116,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 117,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 118,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 119,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 120,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 121,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 122,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 123,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2
                        },
                        new
                        {
                            Id = 124,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2
                        },
                        new
                        {
                            Id = 125,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 126,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 127,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 128,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 129,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 0
                        },
                        new
                        {
                            Id = 130,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 201,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2613),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 101,
                            ProductId = 1,
                            Quantity = 1,
                            UnitPrice = 2999.99m
                        },
                        new
                        {
                            Id = 202,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2617),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 102,
                            ProductId = 2,
                            Quantity = 1,
                            UnitPrice = 4999.99m
                        },
                        new
                        {
                            Id = 203,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2618),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 103,
                            ProductId = 3,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 204,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2619),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 104,
                            ProductId = 4,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 205,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2620),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 105,
                            ProductId = 5,
                            Quantity = 1,
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            Id = 206,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2651),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 106,
                            ProductId = 6,
                            Quantity = 1,
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            Id = 207,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2652),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 107,
                            ProductId = 7,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 208,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2653),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 108,
                            ProductId = 8,
                            Quantity = 1,
                            UnitPrice = 3499.99m
                        },
                        new
                        {
                            Id = 209,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2654),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 109,
                            ProductId = 9,
                            Quantity = 1,
                            UnitPrice = 2499.99m
                        },
                        new
                        {
                            Id = 210,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2655),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 110,
                            ProductId = 10,
                            Quantity = 1,
                            UnitPrice = 3999.99m
                        },
                        new
                        {
                            Id = 211,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2656),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 111,
                            ProductId = 11,
                            Quantity = 1,
                            UnitPrice = 499.99m
                        },
                        new
                        {
                            Id = 212,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2657),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 112,
                            ProductId = 12,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 213,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2658),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 113,
                            ProductId = 13,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 214,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2659),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 114,
                            ProductId = 14,
                            Quantity = 1,
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            Id = 215,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2660),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 115,
                            ProductId = 15,
                            Quantity = 1,
                            UnitPrice = 1499.99m
                        },
                        new
                        {
                            Id = 216,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2661),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 116,
                            ProductId = 16,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 217,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2663),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 117,
                            ProductId = 17,
                            Quantity = 1,
                            UnitPrice = 899.99m
                        },
                        new
                        {
                            Id = 218,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2664),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 118,
                            ProductId = 18,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 219,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2664),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 119,
                            ProductId = 19,
                            Quantity = 1,
                            UnitPrice = 149.99m
                        },
                        new
                        {
                            Id = 220,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2665),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 120,
                            ProductId = 20,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 221,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2666),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 121,
                            ProductId = 21,
                            Quantity = 1,
                            UnitPrice = 49.99m
                        },
                        new
                        {
                            Id = 222,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2667),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 122,
                            ProductId = 22,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 223,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2668),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 123,
                            ProductId = 23,
                            Quantity = 1,
                            UnitPrice = 79.99m
                        },
                        new
                        {
                            Id = 224,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2669),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 124,
                            ProductId = 24,
                            Quantity = 1,
                            UnitPrice = 39.99m
                        },
                        new
                        {
                            Id = 225,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2670),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 125,
                            ProductId = 25,
                            Quantity = 1,
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            Id = 226,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2671),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 126,
                            ProductId = 26,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 227,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2672),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 127,
                            ProductId = 27,
                            Quantity = 1,
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            Id = 228,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2672),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 128,
                            ProductId = 28,
                            Quantity = 1,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            Id = 229,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2673),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 129,
                            ProductId = 29,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 230,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2674),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 130,
                            ProductId = 30,
                            Quantity = 1,
                            UnitPrice = 89.99m
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2248),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Telefon",
                            Price = 2999.99m,
                            Properties = "Son model akıllı telefon"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2255),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Price = 4999.99m,
                            Properties = "Yüksek performanslı laptop"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2257),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kamera",
                            Price = 1999.99m,
                            Properties = "Yüksek çözünürlüklü kamera"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2258),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tablet",
                            Price = 1999.99m,
                            Properties = "Taşınabilir tablet"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2259),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bluetooth Hoparlör",
                            Price = 399.99m,
                            Properties = "Kablosuz hoparlör"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2261),
                            ImageUrl = "/images/product-6.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Saat",
                            Price = 799.99m,
                            Properties = "Akıllı saat"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2262),
                            ImageUrl = "/images/product-7.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kulaklık",
                            Price = 299.99m,
                            Properties = "Kablosuz kulaklık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2263),
                            ImageUrl = "/images/product-8.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dizüstü Bilgisayar",
                            Price = 3499.99m,
                            Properties = "Hafif dizüstü bilgisayar"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2265),
                            ImageUrl = "/images/product-9.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oyun Konsolu",
                            Price = 2499.99m,
                            Properties = "Yeni nesil oyun konsolu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2267),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Masaüstü Bilgisayar",
                            Price = 3999.99m,
                            Properties = "Güçlü masaüstü bilgisayar"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2268),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yazıcı",
                            Price = 499.99m,
                            Properties = "Renkli yazıcı"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2269),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tarayıcı",
                            Price = 299.99m,
                            Properties = "Doküman tarayıcı"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2271),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Projeor",
                            Price = 1999.99m,
                            Properties = "Ev sinema sistemi için projektör"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2272),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kamera Lens",
                            Price = 799.99m,
                            Properties = "Yüksek kaliteli lens"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2273),
                            ImageUrl = "/images/product-6.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aksiyon Kamerası",
                            Price = 1499.99m,
                            Properties = "Aksiyon çekimleri için kamera"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2274),
                            ImageUrl = "/images/product-7.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Küçük Ev Aletleri",
                            Price = 299.99m,
                            Properties = "Küçük ev aletleri"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2275),
                            ImageUrl = "/images/product-8.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mutfak Robotu",
                            Price = 899.99m,
                            Properties = "Mutfak robotu"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2277),
                            ImageUrl = "/images/product-9.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Blender",
                            Price = 199.99m,
                            Properties = "Blender"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2278),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mikser",
                            Price = 149.99m,
                            Properties = "Mikser"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2279),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fırın",
                            Price = 1999.99m,
                            Properties = "Dijital fırın"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2281),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ruj",
                            Price = 49.99m,
                            Properties = "Kırmızı ruj"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2282),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Parfüm",
                            Price = 199.99m,
                            Properties = "Kadın parfümü"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2283),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Krem",
                            Price = 79.99m,
                            Properties = "Nemlendirici krem"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2284),
                            ImageUrl = "/images/product-6.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Şampuan",
                            Price = 39.99m,
                            Properties = "Saç şampuanı"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2285),
                            ImageUrl = "/images/product-7.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dudak Balmı",
                            Price = 19.99m,
                            Properties = "Nemlendirici dudak balmı"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2321),
                            ImageUrl = "/images/product-8.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Seti",
                            Price = 299.99m,
                            Properties = "Makyaj seti"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2323),
                            ImageUrl = "/images/product-9.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Göz Farı",
                            Price = 59.99m,
                            Properties = "Göz farı"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2324),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oje",
                            Price = 29.99m,
                            Properties = "Renkli oje"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2325),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cilt Bakım Seti",
                            Price = 199.99m,
                            Properties = "Cilt bakım seti"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2326),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vücut Losyonu",
                            Price = 89.99m,
                            Properties = "Vücut losyonu"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2327),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saç Spreyi",
                            Price = 39.99m,
                            Properties = "Saç spreyi"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2329),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Ayna",
                            Price = 49.99m,
                            Properties = "Makyaj aynası"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2330),
                            ImageUrl = "/images/product-6.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tırnak Bakım Seti",
                            Price = 29.99m,
                            Properties = "Tırnak bakım seti"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2332),
                            ImageUrl = "/images/product-7.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yüz Maskesi",
                            Price = 19.99m,
                            Properties = "Yüz maskesi"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2333),
                            ImageUrl = "/images/product-8.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Göz Kremi",
                            Price = 59.99m,
                            Properties = "Göz kremi"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2334),
                            ImageUrl = "/images/product-9.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dudak Peelingi",
                            Price = 29.99m,
                            Properties = "Dudak peelingi"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2335),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cilt Temizleme Jeli",
                            Price = 39.99m,
                            Properties = "Cilt temizleme jeli"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2336),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vücut Scrub'ı",
                            Price = 49.99m,
                            Properties = "Vücut scrub'ı"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2338),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saç Maskesi",
                            Price = 59.99m,
                            Properties = "Saç maskesi"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2339),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Fırçası",
                            Price = 19.99m,
                            Properties = "Makyaj fırçası"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2340),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tişört",
                            Price = 99.99m,
                            Properties = "Pamuklu tişört"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2341),
                            ImageUrl = "/images/product-6.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pantolon",
                            Price = 149.99m,
                            Properties = "Şık pantolon"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2342),
                            ImageUrl = "/images/product-7.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elbise",
                            Price = 199.99m,
                            Properties = "Şık elbise"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2343),
                            ImageUrl = "/images/product-8.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ceket",
                            Price = 299.99m,
                            Properties = "Şık ceket"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2344),
                            ImageUrl = "/images/product-9.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kaban",
                            Price = 399.99m,
                            Properties = "Kış kabanı"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2346),
                            ImageUrl = "/images/product-1.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roman",
                            Price = 39.99m,
                            Properties = "Roman"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2347),
                            ImageUrl = "/images/product-2.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bilim Kurgu",
                            Price = 29.99m,
                            Properties = "Bilim kurgu kitabı"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2348),
                            ImageUrl = "/images/product-3.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tarih Kitabı",
                            Price = 34.99m,
                            Properties = "Tarih kitabı"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2349),
                            ImageUrl = "/images/product-4.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çocuk Kitabı",
                            Price = 19.99m,
                            Properties = "Çocuklar için kitap"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2025, 1, 17, 17, 43, 4, 25, DateTimeKind.Utc).AddTicks(2351),
                            ImageUrl = "/images/product-5.jpg",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yemek Kitabı",
                            Price = 49.99m,
                            Properties = "Yemek tarifleri kitabı"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            RoleId = "115c7796-cfac-44de-91b5-916eaae125b5"
                        },
                        new
                        {
                            UserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            RoleId = "811f466c-9d06-43f8-a054-24aedbb4161b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.BasketItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.OrderItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ProductCategory", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
