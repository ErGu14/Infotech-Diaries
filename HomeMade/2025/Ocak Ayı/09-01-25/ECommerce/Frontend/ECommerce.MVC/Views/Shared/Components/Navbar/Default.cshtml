@using System.Security.Claims
<header class="bg-primary text-white fixed-top">
    <div class="container">
        <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/">ECommerce</a>
            <button class="navbar-toggler ml-auto" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-between" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item"><a class="nav-link" href="/">Anasayfa</a></li>
                    @await Component.InvokeAsync("CategoriesOnMenu")
                </ul>
                <ul class="navbar-nav">
                    @if(User?.Identity?.IsAuthenticated==true) @* eğer kullanıcı giriş yapmışsa bu sayfayı göster *@
                    {
                        var userEmail = User?.FindFirst(ClaimTypes.Email)?.Value; @* ilk ikisinde userın email tipindeki ilk eşleşen verinin değerini al diyoruz alttakda user name olarak yine email alıyoruz çünkü senaryomuz bu şekilde *@
                        var userName = User?.FindFirst(ClaimTypes.Name)?.Value;
                        var displayName = userEmail ?? userName ?? "Kullanıcı";  @* şimdi bu kodu kullanarak aşağıda görüncek olan ismi ve gerekli hesap bilgilerine yönlendirecek bir controller route oluşturucak. ama burda if else yapmamızın sebebi şekildede emiali ve usernameyi kontrol ederek kullanıcı adına ulaşmak 2 türlüde koddan isim alınabilir sadece email diyerekde yapabilirdim ama bu şekilde de yapılacağını görmüş oldum *@
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Index">
                                @displayName
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Auth" asp-action="Logout">  @* gerekli controlleri çağırıp çıkış yaptırıcam *@
                                Çıkış Yap
                            </a>
                        </li>
                    }
                    else @* eğer çıkış yapılmışsa veya kullanıcı girişi olmamışsa  aşağıda giriş yaptıracak veya kayıt olduracak yönergeyi yolluyorum *@
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Auth" asp-action="Login">
                                Giriş Yap
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Auth" asp-action="Register">
                                Kayıt Ol
                            </a>
                        </li>
                    }

                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Basket" asp-action="Index">
                            <i class="fas fa-shopping-cart"></i> Sepet
                        </a>
                    </li> 
                   @*  örnek olsun diye kullanıcılar giriş yaptığında da admin giriş butonunu göstertçez ama bunu bontrollerde zaten sadece gerekli yetki girebilcek diceğimiz için şuanlık sorun tok ama admin olanlar görebilirim diye ekstra işlem yapabiliriz *@
                    @if(User?.Identity?.IsAuthenticated==true){
                        <li class="nav-item">
                            <a class="nav-link" asp-area="Admin" asp-controller="Home" asp-action="Index">
                                Admin Paneli
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </nav>
    </div>
</header>